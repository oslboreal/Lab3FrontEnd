Caracteristicas faltantes de JS:
- Tipos de variables. 
- Errores en tiempo de escritura.
- Auto completado dependiendo de la variable .
- Metodo estatico de programacion 
- Clases y modulos (Antes de ES6) .

Sring:
"Juan Pérez"
'UTN FRA'
`<h1>Hola mundo</h1>`

Vamos a poder crear tipos nuevos, interfaces y tipos genericos. 

Es básicamente un superconjunto de javascript, es decir que puedo usar lo mismo que escribo en javascript en typescript.

El tipo de dato:
El tipo de dato es para evitar errores. 
Es un tipo de "REGLA". 

Tipos de variables: 
-> var tiene alcance global. 
-> let tiene alcance limitado, según el bloque en el que se encuentra.


Declarar tipo de dato:
let nombre:boolean = true; (Boolean es el tipo de dato.)
let dinero:number = 3; // Soporta tanto enteros como flotantes.
let esAquaman = true; (En este caso Typescript nos va a decir que si a Aquaman le querés poner un entero, te va a decir que no por que es bool)

Tipo de dato Any:
let vengador:any = "Dr.Strange";
vengador = 150; // Esto está perfecto y no tira error. 
// Explicitamente lo llamamos como Any. 

Arrays::::::::::::::::::::::::::::::::::::::

Son iguales que js pero podemos definir que tipo de dato contienen.

let vector = [1, 2 ,3, 4,5,6];

let vector:number[] = [1,2,3];
let vector:string[] = ["Yes", "no"];

Tuplas::::::::::::::::::::::::::::::::::::::

let:heroe:[string, number] = ["DrStrange", 100];

Puedo declarar un Array donde el primer elemento sea del tipo String y el segundo del tipo number, pero si quiero asignar
un valor común no me va a dejar, solo me va a dejar si los datos a cargar corresponde al tipo de dato.
